# Generated by Django 2.0.13 on 2020-08-03 17:16

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('books', '0005_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=100)),
                ('user_name', models.CharField(max_length=100)),
                ('user_phone', models.IntegerField()),
                ('default_flag', models.IntegerField(default=0)),
                ('province_name', models.CharField(max_length=100)),
                ('city_name', models.CharField(max_length=100)),
                ('region_name', models.CharField(max_length=100)),
                ('detail_address', models.CharField(max_length=100)),
                ('create_time', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_address',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('cart_item_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=100)),
                ('goods_id', models.CharField(max_length=100)),
                ('goods_count', models.CharField(max_length=100)),
                ('is_deleted', models.IntegerField(default=0)),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField()),
            ],
            options={
                'db_table': 'shopping_cart',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('category_level', models.IntegerField()),
                ('parent_id', models.CharField(max_length=100)),
                ('category_name', models.CharField(max_length=100)),
                ('category_rank', models.IntegerField()),
                ('is_deleted', models.IntegerField(default=0)),
                ('create_time', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'goods_category',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('goods_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('goods_name', models.CharField(max_length=100)),
                ('goods_intro', models.CharField(max_length=100)),
                ('goods_category', models.CharField(max_length=100)),
                ('goods_cover_img', models.CharField(max_length=100)),
                ('goods_carousel', models.CharField(max_length=100)),
                ('goods_detail_content', models.CharField(max_length=100)),
                ('original_price', models.FloatField()),
                ('selling_price', models.FloatField()),
                ('stock_num', models.IntegerField()),
                ('tag', models.CharField(max_length=100)),
                ('goods_sell_status', models.IntegerField(default=0)),
                ('create_time', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'goods_info',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('Token_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=100)),
                ('token', models.CharField(max_length=100)),
                ('update_time', models.CharField(max_length=100)),
                ('expire_time', models.DateField(auto_now_add=True)),
                ('default_flag', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_token',
            },
        ),
    ]
